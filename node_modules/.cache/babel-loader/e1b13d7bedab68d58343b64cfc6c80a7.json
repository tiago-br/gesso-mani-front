{"ast":null,"code":"// import React, { Component } from 'react'\n// import axios from 'axios'\n// import styled from 'styled-components'\n// import api from '../../utils/api.util'\n// require('dotenv').config()\n// const Container = styled.div`\n// width: 100vw;\n// height: 100vh;\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// margin-top: -12vh;\n// /* @media only screen and (max-width: 1200px) {  \n//         width: 1rem;\n//         margin-left: -2.4rem;\n//         height: 98vh;\n// } */\n// `\n// const FormUser = styled.div`\n//  display: flex;\n//  justify-content: center;\n//  align-items: center;\n//  flex-direction: column;\n//  width: 25rem;\n//  height: 30rem;\n//  border-radius: 25px;\n//  margin-top: 3rem;\n//  background-color: grey;\n//  border: 2px solid black;\n// `\n// const LabelUsername = styled.label`\n// margin-top: 4rem;\n// font-size: 1.2rem;\n// `\n// const LabelPassword = styled.label`\n// margin-top: 2rem;\n// font-size: 1.2rem;\n// `\n// const FormContent = styled.div`\n// margin-top: -1rem;\n// display: flex;\n// flex-direction: column;\n// width: 20rem;\n// `\n// const ButtonSubmit = styled.button`\n// margin-top: 2rem;\n// display: inline-block;\n// padding: .75rem 1.25rem;\n// border-radius: 10rem;\n// color: black;\n// text-transform: uppercase;\n// font-size: 1rem;\n// letter-spacing: .15rem;\n// transition: all .3s;\n// position: relative;\n// overflow: hidden;\n// z-index: 1;\n//   &:after {\n//     content: '';\n//     position: absolute;\n//     bottom: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100%;\n//     background-color: white;\n//     border-radius: 10rem;\n//     z-index: -2;\n//   }\n//   &:before {\n//     content: '';\n//     position: absolute;\n//     bottom: 0;\n//     left: 0;\n//     width: 0%;\n//     height: 100%;\n//     background-color:   black;\n//     transition: all .3s;\n//     border-radius: 10rem;\n//     z-index: -1;\n//   }\n//   &:hover {\n//     color: whitesmoke;\n//     &:before {\n//       width: 100%;\n//     }\n//   }\n// `\n// const Tittle = styled.h1`\n//     font-size: 2rem;\n//     text-align: center;\n// `\n// const Input = styled.input`\n// margin-top: 10px;\n// height: 2rem;\n// border-radius: 10px;\n// `\n// const Message = styled.p`\n// margin-top: 1.5rem;\n// text-align: center;\n// `\n// class FormNewUser extends Component {\n//     state = {\n//         username: \"\",\n//         password: \"\",\n//         msg: \"\"\n//     }\n//     colorMessage = () => {\n//         if(this.state.msg === 'Usuário criado com sucesso'){\n//             return \"green\"\n//         }\n//         else{\n//              return \"red\"\n//         }\n//     }\n//     handleUsername = (e) => {\n//         e.preventDefault()\n//         const { name, value } = e.target\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n//     handleSubmit = async (e) => {\n//         const payload = {\n//             username: this.state.username,\n//             password: this.state.password\n//         }\n//         const usernames = await api.getUsers()\n//         const checkExistUsername = usernames.data.find((e) => e.username === this.state.username)\n//         try {\n//             api.signup(payload)\n//             this.setState({\n//                 msg: 'Usuário criado com sucesso',\n//             })\n//             if (this.state.username.length <= 3) {\n//                 this.setState({\n//                     msg: 'Usuário deve conter pelo menos 4 dígitos',\n//                 })\n//             }\n//             if (this.state.password.length !== 6) {\n//                 this.setState({\n//                     msg: 'A senha precisa ter 6 dígitos',\n//                 })\n//             }\n//             if (checkExistUsername) {\n//                 this.setState({\n//                     msg: 'Usuário já existente',\n//                 })\n//             }\n//         } catch (error) {\n//         }\n//     }\n//     render() {\n//         return (\n//             <Container>\n//                 <FormUser>\n//                     <Tittle>Novo Usuário</Tittle>\n//                     <FormContent>\n//                         <LabelUsername>Username</LabelUsername>\n//                         <Input type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleUsername}></Input>\n//                         <LabelPassword>Senha</LabelPassword>\n//                         <Input type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleUsername}></Input>\n//                         <ButtonSubmit type=\"submit\" onClick={this.handleSubmit}>Enviar</ButtonSubmit>\n//                         <Message style = {{color : this.colorMessage()}}>{this.state.msg}</Message>\n//                     </FormContent>\n//                 </FormUser>\n//             </Container>\n//         )\n//     }\n// }\n// export default FormNewUser","map":{"version":3,"sources":["/home/gustavo/gesso-front/gesso-mani-front/src/components/privado/FormNewUser.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react'\n// import axios from 'axios'\n// import styled from 'styled-components'\n// import api from '../../utils/api.util'\n// require('dotenv').config()\n\n// const Container = styled.div`\n\n// width: 100vw;\n// height: 100vh;\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// margin-top: -12vh;\n// /* @media only screen and (max-width: 1200px) {  \n//         width: 1rem;\n//         margin-left: -2.4rem;\n//         height: 98vh;\n// } */\n\n// `\n\n// const FormUser = styled.div`\n//  display: flex;\n//  justify-content: center;\n//  align-items: center;\n//  flex-direction: column;\n//  width: 25rem;\n//  height: 30rem;\n//  border-radius: 25px;\n//  margin-top: 3rem;\n//  background-color: grey;\n//  border: 2px solid black;\n\n \n// `\n// const LabelUsername = styled.label`\n// margin-top: 4rem;\n// font-size: 1.2rem;\n\n// `\n// const LabelPassword = styled.label`\n// margin-top: 2rem;\n// font-size: 1.2rem;\n\n// `\n\n// const FormContent = styled.div`\n\n// margin-top: -1rem;\n// display: flex;\n// flex-direction: column;\n// width: 20rem;\n\n// `\n\n// const ButtonSubmit = styled.button`\n\n// margin-top: 2rem;\n// display: inline-block;\n// padding: .75rem 1.25rem;\n// border-radius: 10rem;\n// color: black;\n// text-transform: uppercase;\n// font-size: 1rem;\n// letter-spacing: .15rem;\n// transition: all .3s;\n// position: relative;\n// overflow: hidden;\n// z-index: 1;\n//   &:after {\n//     content: '';\n//     position: absolute;\n//     bottom: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100%;\n//     background-color: white;\n//     border-radius: 10rem;\n//     z-index: -2;\n//   }\n//   &:before {\n//     content: '';\n//     position: absolute;\n//     bottom: 0;\n//     left: 0;\n//     width: 0%;\n//     height: 100%;\n//     background-color:   black;\n//     transition: all .3s;\n//     border-radius: 10rem;\n//     z-index: -1;\n//   }\n//   &:hover {\n//     color: whitesmoke;\n//     &:before {\n//       width: 100%;\n//     }\n//   }\n\n// `\n// const Tittle = styled.h1`\n//     font-size: 2rem;\n//     text-align: center;\n    \n// `\n// const Input = styled.input`\n\n// margin-top: 10px;\n// height: 2rem;\n// border-radius: 10px;\n\n// `\n// const Message = styled.p`\n\n// margin-top: 1.5rem;\n// text-align: center;\n\n\n// `\n\n// class FormNewUser extends Component {\n    \n//     state = {\n//         username: \"\",\n//         password: \"\",\n//         msg: \"\"\n//     }\n    \n//     colorMessage = () => {\n//         if(this.state.msg === 'Usuário criado com sucesso'){\n            \n//             return \"green\"\n\n//         }\n//         else{\n\n//              return \"red\"\n//         }\n\n//     }\n\n\n//     handleUsername = (e) => {\n//         e.preventDefault()\n//         const { name, value } = e.target\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n\n//     handleSubmit = async (e) => {\n\n\n//         const payload = {\n//             username: this.state.username,\n//             password: this.state.password\n//         }\n\n//         const usernames = await api.getUsers()\n//         const checkExistUsername = usernames.data.find((e) => e.username === this.state.username)\n\n\n\n\n//         try {\n\n//             api.signup(payload)\n\n//             this.setState({\n//                 msg: 'Usuário criado com sucesso',\n//             })\n\n//             if (this.state.username.length <= 3) {\n//                 this.setState({\n//                     msg: 'Usuário deve conter pelo menos 4 dígitos',\n//                 })\n//             }\n//             if (this.state.password.length !== 6) {\n//                 this.setState({\n//                     msg: 'A senha precisa ter 6 dígitos',\n//                 })\n//             }\n//             if (checkExistUsername) {\n//                 this.setState({\n//                     msg: 'Usuário já existente',\n//                 })\n//             }\n\n\n//         } catch (error) {\n\n\n//         }\n\n\n//     }\n\n//     render() {\n//         return (\n//             <Container>\n//                 <FormUser>\n//                     <Tittle>Novo Usuário</Tittle>\n//                     <FormContent>\n//                         <LabelUsername>Username</LabelUsername>\n//                         <Input type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleUsername}></Input>\n//                         <LabelPassword>Senha</LabelPassword>\n//                         <Input type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleUsername}></Input>\n//                         <ButtonSubmit type=\"submit\" onClick={this.handleSubmit}>Enviar</ButtonSubmit>\n//                         <Message style = {{color : this.colorMessage()}}>{this.state.msg}</Message>\n//                     </FormContent>\n//                 </FormUser>\n//             </Container>\n//         )\n//     }\n// }\n\n// export default FormNewUser\n"]},"metadata":{},"sourceType":"module"}