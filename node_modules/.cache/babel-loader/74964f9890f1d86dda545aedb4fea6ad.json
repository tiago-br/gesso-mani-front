{"ast":null,"code":"import axios from \"axios\";\n\nclass Api {\n  constructor() {\n    this.login = async payload => {\n      const {\n        data\n      } = await this.api.post('/login', payload);\n      const {\n        token\n      } = data;\n      localStorage.setItem('token', token);\n    };\n\n    this.signup = async payload => {\n      await this.api.post('/signup', payload);\n    };\n\n    this.getUsers = async () => {\n      const users = await this.api.get('/signup');\n      return users;\n    };\n\n    this.api = axios.create({\n      baseURL: \"http://localhost:5000\"\n    });\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        config.headers = {\n          Authorization: `Bearer ${token}`\n        };\n      }\n\n      return config;\n    }, error => console.log(error));\n    this.api.interceptors.response.use(response => response, error => {\n      if (error.response.status === 400) {\n        localStorage.removeItem('token');\n        window.location = \"/area-do-funcionario\";\n      }\n\n      throw error;\n    });\n  }\n\n}\n\nexport default new Api();","map":{"version":3,"sources":["/home/gustavo/gesso-front/gesso-mani-front/src/utils/api.util.js"],"names":["axios","Api","constructor","login","payload","data","api","post","token","localStorage","setItem","signup","getUsers","users","get","create","baseURL","interceptors","request","use","config","getItem","headers","Authorization","error","console","log","response","status","removeItem","window","location"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,CAAU;AACNC,EAAAA,WAAW,GAAE;AAAA,SAkCbC,KAlCa,GAkCJ,MAAOC,OAAP,IAAkB;AACvB,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAM,KAAKC,GAAL,CAASC,IAAT,CAAc,QAAd,EAAuBH,OAAvB,CAArB;AACA,YAAM;AAACI,QAAAA;AAAD,UAAUH,IAAhB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,KAA7B;AACH,KAtCY;;AAAA,SAwCbG,MAxCa,GAwCJ,MAAOP,OAAP,IAAmB;AAExB,YAAM,KAAKE,GAAL,CAASC,IAAT,CAAc,SAAd,EAAwBH,OAAxB,CAAN;AAEH,KA5CY;;AAAA,SA8CbQ,QA9Ca,GA8CF,YAAY;AAEtB,YAAMC,KAAK,GAAI,MAAM,KAAKP,GAAL,CAASQ,GAAT,CAAa,SAAb,CAArB;AACA,aAAOD,KAAP;AAEA,KAnDY;;AACT,SAAKP,GAAL,GAAWN,KAAK,CAACe,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAE;AADW,KAAb,CAAX;AAGA,SAAKV,GAAL,CAASW,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACKC,MAAD,IAAY;AACV,YAAMZ,KAAK,GAAGC,YAAY,CAACY,OAAb,CAAqB,OAArB,CAAd;;AAGA,UAAGb,KAAH,EAAU;AACRY,QAAAA,MAAM,CAACE,OAAP,GAAiB;AACfC,UAAAA,aAAa,EAAG,UAASf,KAAM;AADhB,SAAjB;AAGD;;AAED,aAAOY,MAAP;AACD,KAZL,EAaKI,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAbf;AAgBE,SAAKlB,GAAL,CAASW,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CACGQ,QAAD,IAAcA,QADhB,EAEIH,KAAD,IAAW;AACV,UAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAkC;AAEhCnB,QAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,sBAAlB;AACD;;AACD,YAAMP,KAAN;AACD,KATH;AAYL;;AAjCK;;AAwDV,eAAe,IAAIvB,GAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\n\nclass Api {\n    constructor(){\n        this.api = axios.create({\n            baseURL: \"http://localhost:5000\"\n        })\n        this.api.interceptors.request.use(\n            (config) => {\n              const token = localStorage.getItem('token');\n              \n              \n              if(token) {\n                config.headers = {\n                  Authorization: `Bearer ${token}`,\n                }\n              }\n              \n              return config\n            },\n            (error) => console.log(error)\n          )\n          \n          this.api.interceptors.response.use(\n            (response) => response,\n            ((error) => {\n              if (error.response.status === 400){\n                \n                localStorage.removeItem('token')\n                window.location = \"/area-do-funcionario\"\n              }\n              throw error\n            }\n          )\n        )\n    };\n    \n    login =  async (payload) =>{\n        const {data} = await this.api.post('/login',payload)\n        const {token} = data\n        localStorage.setItem('token',token)\n    }\n\n    signup = async (payload) => {\n\n        await this.api.post('/signup',payload)\n\n    }\n\n    getUsers = async () => {\n\n     const users =  await this.api.get('/signup')\n     return users\n\n    }\n\n}\n\nexport default new Api()"]},"metadata":{},"sourceType":"module"}