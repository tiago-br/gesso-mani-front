{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/gesso-front/gesso-mani-front/src/components/privado/FormNewUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport api from '../../utils/api.util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst formUser = styled.form`\n\n`;\n\nclass FormNewUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      msg: \"\"\n    };\n\n    this.handleUsername = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      const payload = {\n        username: this.state.username,\n        password: this.state.password\n      };\n      const usernames = await api.getUsers();\n      const checkExistUsername = usernames.data.find(e => e.username === this.state.username);\n      console.log('antes do try');\n\n      try {\n        console.log('dentro do try');\n        api.signup(payload);\n\n        if (this.state.username.length <= 3) {\n          this.setState({\n            msg: 'Usuário deve conter pelo menos 4 dígitos'\n          });\n        }\n\n        if (this.state.password.length !== 6) {\n          this.setState({\n            msg: 'A senha precisa ter 6 dígitos'\n          });\n        }\n\n        if (checkExistUsername) {\n          this.setState({\n            msg: 'Usuário já existente'\n          });\n        }\n      } catch (error) {\n        console.log('1111');\n      }\n\n      this.setState({\n        msg: 'Usuário criado com sucesso'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"formUser\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.username,\n          name: \"username\",\n          onChange: this.handleUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.password,\n          name: \"password\",\n          onChange: this.handleUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default FormNewUser;","map":{"version":3,"sources":["/home/gustavo/gesso-front/gesso-mani-front/src/components/privado/FormNewUser.js"],"names":["React","Component","axios","styled","api","require","config","formUser","form","FormNewUser","state","username","password","msg","handleUsername","e","preventDefault","name","value","target","setState","handleSubmit","payload","usernames","getUsers","checkExistUsername","data","find","console","log","signup","length","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport api from '../../utils/api.util'\nrequire('dotenv').config()\n\n\nconst formUser = styled.form`\n\n`\n\nclass FormNewUser extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        msg: \"\"\n    }\n\n\n    handleUsername = (e) => {\n        e.preventDefault()\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = async (e) => {\n\n\n        const payload = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        const usernames = await api.getUsers()\n        const checkExistUsername = usernames.data.find((e) => e.username === this.state.username)\n\n\n        console.log('antes do try')\n\n        try {\n            console.log('dentro do try')\n            api.signup(payload)\n\n\n            if (this.state.username.length <= 3) {\n                this.setState({\n                    msg: 'Usuário deve conter pelo menos 4 dígitos',\n                })\n            } \n            if (this.state.password.length !== 6) {\n                this.setState({\n                    msg: 'A senha precisa ter 6 dígitos',\n                })\n            } \n           if (checkExistUsername) {\n                this.setState({\n                    msg: 'Usuário já existente',\n                })\n            } \n           \n\n        } catch (error) {\n            console.log('1111')\n\n\n        }\n\n\n\n        this.setState({\n            msg: 'Usuário criado com sucesso',\n        })\n\n\n    }\n\n    render() {\n        return (\n            <>\n                <formUser>\n                    <label>Username</label>\n                    <input type=\"text\" value={this.state.username} name=\"username\" onChange={this.handleUsername}></input>\n                    <label>Senha</label>\n                    <input type=\"password\" value={this.state.password} name=\"password\" onChange={this.handleUsername}></input>\n                    <button type=\"submit\" onClick={this.handleSubmit}>Enviar</button>\n                </formUser>\n                <p>{this.state.msg}</p>\n            </>\n        )\n    }\n}\n\nexport default FormNewUser\n"]},"metadata":{},"sourceType":"module"}